ARG PYTORCH="1.5"
ARG CUDA="10.1"
ARG CUDNN="7"

############################
# STEP 1 build executable binary
############################
FROM golang:alpine AS builder

# Install git + SSL ca certificates.
# Git is required for fetching the dependencies.
# Ca-certificates is required to call HTTPS endpoints.
RUN apk update && apk add --no-cache git ca-certificates && update-ca-certificates

WORKDIR /go/src/server

# Fetch dependencies.
COPY web/goserver/src/server/go.mod .
COPY web/goserver/src/server/go.sum .
RUN go mod download
COPY web/goserver/src/server .
# Build the binary.
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-w -s" -o /go/bin/workers/train /go/src/server/workers/train/cmd

############################
# STEP 2 build PyTorch
############################
FROM pytorch/pytorch:${PYTORCH}-cuda${CUDA}-cudnn${CUDNN}-devel

ENV TORCH_CUDA_ARCH_LIST="6.0 6.1 7.0+PTX"
ENV TORCH_NVCC_FLAGS="-Xfatbin -compress-all"
ENV CMAKE_PREFIX_PATH="$(dirname $(which conda))/../"

RUN apt-get update && apt-get install -y git ninja-build libglib2.0-0 libsm6 libxrender-dev libxext6 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN apt update && \
    apt install -y \
        libgtk-3-dev \
        cpio \
        unzip \
        wget \
        curl && \
     rm -rf /var/lib/apt/lists/*

ENV FORCE_CUDA="1"
ENV MKL_THREADING_LAYER="GNU"

# Install packages for mmdetection
RUN conda install cython -y && conda clean --all
COPY ./pytorch_toolkit/object_detection/requirements.txt /tmp/ote/pytorch_toolkit/object_detection/requirements.txt
COPY ./external/mmdetection/requirements.txt /tmp/ote/external/mmdetection/requirements.txt
COPY ./external/mmdetection/requirements /tmp/ote/external/mmdetection/requirements
WORKDIR /tmp/ote/pytorch_toolkit/object_detection
RUN cat requirements.txt | xargs -n 1 -L 1 pip install
RUN pip install git+https://github.com/open-mmlab/cocoapi.git#subdirectory=pycocotools

# Copy our static executable.
COPY --from=builder /etc/ssl/certs/ca-certificates.crt /etc/ssl/certs/
COPY --from=builder /go/bin/workers/train /go/bin/workers/train

ENTRYPOINT rm -rf /ote/external/mmdetection/build && \
           cd /ote/external/mmdetection && \
           python setup.py develop && \
           /go/bin/workers/train
